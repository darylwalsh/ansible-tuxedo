- hosts: localhost
  become: true
  become_user: daryl
  vars:
    userinstall: daryl
  tasks: 
  - name: Install htop
    apt: name=htop
  - name: install prerequisite libraries for erlang 
    become: true
    apt:
      update_cache: yes
      cache_valid_time: 86400 # 1day
      state: latest
      name:
      - build-essential
      - autoconf
      - m4
      - libncurses5-dev
      - libwxgtk3.0-gtk3-dev
      - libgl1-mesa-dev
      - libglu1-mesa-dev
      - libpng-dev
      - libssh-dev
      - unixodbc-dev
      - xsltproc
      - fop
      - libxml2-utils
      - libncurses-dev
      - openjdk-11-jdk
      - xsel
  - name: ensure fonts directory
    file:
      path: "{{ lookup('env', 'HOME') }}/.fonts"
      state: directory
  - name: Hack exists
    shell: "ls {{ lookup('env', 'HOME') }}/.fonts/Hack*Nerd*Font*Complete*"
    register: hack_exists
    ignore_errors: yes
  - name: Download Hack
    when: hack_exists is failed
    ansible.builtin.unarchive:
      src: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip
      dest: "{{ lookup('env', 'HOME') }}/.fonts/"
      remote_src: yes

  - name: sh env
    ansible.builtin.shell:
    args:
      cmd: fish
      chdir: '/home/daryl/'
    register: shenv
  - name: asdf plugin erlang
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf plugin add erlang
    args:
      executable: fish
    register: result
    failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == ''
  - name: asdf install erlang (for Linux)
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf install erlang latest
    args:
      executable: fish
  - name: asdf plugin elix
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf plugin add erlang
    args:
      executable: fish
    register: result
    failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == ''



