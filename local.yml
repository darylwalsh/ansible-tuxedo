- hosts: localhost
  become: true
  vars:
    userinstall: daryl
  tasks: 
  - name: Install htop
    apt: name=htop
  - name: install prerequisite libraries for erlang 
    become: true
    apt:
      update_cache: yes
      cache_valid_time: 86400 # 1day
      state: latest
      name:
      - build-essential
      - autoconf
      - m4
      - libncurses5-dev
      - libwxgtk3.0-gtk3-dev
      - libgl1-mesa-dev
      - libglu1-mesa-dev
      - libpng-dev
      - libssh-dev
      - unixodbc-dev
      - xsltproc
      - fop
      - libxml2-utils
      - libncurses-dev
      - openjdk-11-jdk
      - xsel
  - name: ensure fonts directory
    file:
      path: "/home/{{userinstall}}/.fonts"
      state: directory
    become: true
    become_user: daryl
  - name: Hack exists
    shell: "ls /home/{{userinstall}}/.fonts/Hack*Nerd*Font*Complete*"
    register: hack_exists
    ignore_errors: yes
    become: true
    become_user: daryl
  - name: Download Hack
    when: hack_exists is failed
    ansible.builtin.unarchive:
      src: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip
      dest: "/home/{{userinstall}}/.fonts/"
      remote_src: yes
    become: true
    become_user: daryl
  - name: Roboto mono exists
    shell: "ls /home/{{userinstall}}/.fonts/RobotoMono*Nerd*Font*Complete*"
    register: robotomono_exists
    ignore_errors: yes
    become: true
    become_user: daryl
  - name: Download RobotoMono
    when: robotomono_exists is failed
    ansible.builtin.unarchive:
      src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/RobotoMono.zip
      dest: "/home/{{userinstall}}/.fonts/"
      remote_src: yes
    become: true
    become_user: daryl
  - name: sh env
    ansible.builtin.shell:
    args:
      cmd: fish
      chdir: '/home/daryl/'
    register: shenv
    become: true
    become_user: daryl
  - name: asdf plugin erlang
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf plugin add erlang
    args:
      executable: fish
    become: true
    become_user: daryl
    register: result
    failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == ''
  - name: asdf install erlang (for Linux)
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf install erlang latest
    args:
      executable: fish
    become: true
    become_user: daryl
  - name: asdf plugin elixir
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf plugin add elixir
    args:
      executable: fish
    become: true
    become_user: daryl
    register: result
    failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == ''
  - name: asdf plugin rust
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf plugin add rust https://github.com/asdf-community/asdf-rust.git
    args:
      executable: fish
    become: true
    become_user: daryl
    register: result
    failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == ''
  - name: asdf install rust (for Linux)
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf install rust latest
    args:
      executable: fish
    become: true
    become_user: daryl
  - name: asdf install elixir (for Linux)
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf install elixir latest
    args:
      executable: fish
    become: true
    become_user: daryl
  - name: asdf plugin ripgrep
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf plugin add ripgrep 
    args:
      executable: fish
    become: true
    become_user: daryl
    register: result
    failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == ''
  - name: asdf install ripgrep (for Linux)
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf install ripgrep 11.0.2
    args:
      executable: fish
    become: true
    become_user: daryl
  - name: asdf plugin lazygit
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf plugin add lazygit 
    args:
      executable: fish
    become: true
    become_user: daryl
    register: result
    failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == ''
  - name: asdf install lazygit (for Linux)
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf install lazygit latest
    args:
      executable: fish
    become: true
    become_user: daryl
  - name: asdf plugin python
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf plugin add python 
    args:
      executable: fish
    become: true
    become_user: daryl
    register: result
    failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == ''
  - name: asdf install python (for Linux)
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf install python 3.11.3
    args:
      executable: fish
    become: true
    become_user: daryl
  - name: asdf plugin nodejs
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
    args:
      executable: fish
    become: true
    become_user: daryl
    register: result
    failed_when: result.rc != 0 and result.stderr | regex_search('(Plugin named .* already added)') == ''
  - name: asdf install nodejs (for Linux)
    ansible.builtin.shell: |
      source /home/{{ userinstall }}/.asdf/asdf.fish
      asdf install nodejs 20.5.0
    args:
      executable: fish
    become: true
    become_user: daryl
  - name: cargo install treesitter-cli
    community.general.cargo: 
      name: tree-sitter-cli
    become: true
    become_user: daryl
  - name: Install yt-dl using the pip executable
    ansible.builtin.pop:
      name: yt-dl
      executable: pip
      extra_args: --user
    become: true
    become_user: daryl
  




